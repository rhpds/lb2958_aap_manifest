---
- name: Fetch Automation Controller manifest file
  ansible.builtin.get_url:
    url: "{{ lb2958_aap_manifest_url }}"
    dest: /tmp/aap-manifest.zip
    username: "{{ lb2958_aap_manifest.username | default(omit) }}"
    password: "{{ lb2958_aap_manifest.password | default(omit) }}"

- name: Create AAP Auth token
  ansible.platform.token:
    description: Creating token to configure AAP2 resources
    scope: write
    state: present
    gateway_hostname: "{{ lb2958_aap_manifest_aap_hostname }}"
    gateway_username: "{{ lb2958_aap_manifest_aap_username }}"
    gateway_password: "{{ lb2958_aap_manifest_aap_password }}"
  register: r_aap_token
  until: r_aap_token.failed == false
  retries: 10
  delay: 30

- name: Save token for agnosticd_user_info
  agnosticd_user_info:
    data:
      aap_controller_token: "{{ r_aap_token.ansible_facts.aap_token.token }}"

- name: Save token in var
  set_fact:
    _lb2958_aap_manifest_token: "{{ r_aap_token.ansible_facts.aap_token.token }}"

- name: Inject AAP2 Controller manifest
  ansible.controller.license:
    manifest: /tmp/aap-manifest.zip
    controller_host: "{{ lb2958_aap_manifest_aap_hostname }}"
    controller_username: "{{ lb2958_aap_manifest_aap_username }}"
    controller_oauthtoken: "{{ _lb2958_aap_manifest_token }}"
    controller_password: "{{ lb2958_aap_manifest_aap_password }}"
    validate_certs: true
  register: r_aap_license
  until: not r_aap_license.failed
  retries: 30
  delay: 30

- name: Remove AAP manifest
  ansible.builtin.file:
    path: /tmp/aap-manifest.zip
    state: absent

